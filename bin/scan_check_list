#!/usr/bin/perl

# Sixgill: Static assertion checker for C/C++ programs.
# Copyright (C) 2009-2010  Stanford University
# Author: Brian Hackett
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# get a list of all checked or missed assertions in a directory.

my $usage = "USAGE: scan_check_list [+|-] prefix < xcheck.log\n";
my $phase = shift or die $usage;
my $prefix = shift or die $usage;

die $usage if ($phase ne "-" && $phase ne "+");

use strict;

my @all_list;
my @bad_list;

while (my $line = <>) {
    if ($line =~ /^ASSERTION (\'.*?\')/) {
        push(@all_list, $1);
    }
    if ($line =~ /^REPORT .*? (\'.*?\')/) {
        push(@bad_list, $1);
    }
    if ($line =~ /^Finished: \'.*?\' FILE (.*?) /) {
        my $filename = $1;
        if ($filename =~ /^$prefix\//) {
            if ($phase eq "+") {
                foreach my $item (@all_list) {
                    my $member = 0;
                    foreach my $baditem (@bad_list) {
                        $member = 1 if ($item eq $baditem);
                    }
                    if (!$member) {
                        print "$item\n";
                    }
                }
            }
            else {
                foreach my $item (@bad_list) {
                    print "$item\n";
                }
            }
        }
        @all_list = ();
        @bad_list = ();
    }
}


